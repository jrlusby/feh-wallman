#! /bin/python3

import argparse
import subprocess
import os, random
from os.path import expanduser
import sys

home = expanduser("~")
history_file = home+'/.wallman_history'
history_length = 10

def main(argv):
    parser = argparse.ArgumentParser(
            description='Personalized Wallpaper managing')
    parser.add_argument('-r', '--random-wallpaper', action='store_true', 
            help='pick a random wallpaper and display it')
    parser.add_argument('-u', '--undo', action='store_true', 
            help='go back one wallpaper in the history')
    parser.add_argument('-s', '--sources', nargs='+', help='allows user to \
            specify non standard wallpaper directory, or multiple wallpaper \
            directories')
    args = parser.parse_args()

    if not args.sources:
        sources = [home+'/.wallpaper']
    else:
        sources = args.sources

    print(listFromHistory([1,4]))

    if args.random_wallpaper:
        r_wallpaper = randFile(sources, balance_prob=True)
        subprocess.call(['feh', '--bg-max', r_wallpaper])
        writeToHistory(r_wallpaper+'\n')
    if args.undo:
        hist_fd = open(history_file)
        hist_fd.readline()
        prev_wallpaper = hist_fd.readline().strip()
        subprocess.call(['feh', '--bg-max', prev_wallpaper])
        output = [prev_wallpaper+'\n']
        for line in hist_fd:
            output.append(line)
        hist_fd = open(history_file, 'w')
        hist_fd.writelines(output)
        hist_fd.close()

def randFile(directories, balance_prob=False):
    choices = []
    if balance_prob:
        choices = [os.path.join(dp, f) for dp, dn, fn in
                os.walk(random.choice(directories)) for f in fn]
    else:
        for directory in directories:
            choices = choices + [os.path.join(dp, f) for dp, dn, fn in
                    os.walk(directory) for f in fn]
    return random.choice(choices)

def listFromHistory(indexes):
    hist_pics = []
    with open(history_file) as hist_fd:
        lines = hist_fd.readlines()
        for index in indexes:
            hist_pics.append(lines[index].strip())
    return hist_pics


def writeToHistory(wallpaper):
    hist_fd = open(history_file)
    output = [wallpaper]
    for line in hist_fd:
        if len(output) < history_length:
            output.append(line)
    hist_fd.close
    hist_fd = open(history_file, 'w')
    hist_fd.writelines(output)
    hist_fd.close()

def deleteCurrentWallpaper():
    if input('ARE YOU SURE? [Yes/No]') == 'Yes':
        hist_fd = open(history_file)
        shitty_wallpaper = hist_fd.readline()
        #remove the wallpaper
        output = []
        for line in hist_fd:
            output.append(line)
        hist_fd.close()
        
    else:
        print('You didnt type Yes so I no delete-y')

if __name__ == '__main__':
    sys.exit(main(sys.argv))
